{"version":3,"file":"index.modern.js","sources":["../src/DnDCharacter.tsx","../src/Components/StatBox.tsx","../src/Components/StatRow.tsx","../src/Components/Skill.tsx","../src/Components/StatBox2.tsx","../src/Components/DeathSave.tsx","../src/Components/AttackTable.tsx","../src/Components/Currency.tsx","../src/DnDCharacterStatsSheet.tsx","../src/Components/Image.tsx","../src/DnDCharacterProfileSheet.tsx","../src/Components/SpellTable.tsx","../src/DnDCharacterSpellSheet.tsx"],"sourcesContent":["export default class DnDCharacter {\n  name?: string\n  classLevel?: string\n  background?: string\n  playerName?: string\n  faction?: string\n  race?: string\n  alignment?: string\n  xp?: string\n  dciNo?: string\n\n  str?: string\n  dex?: string\n  con?: string\n  int?: string\n  wis?: string\n  cha?: string\n\n  inspiration?: string\n  proficiencyBonus?: string\n\n  strSave?: string\n  strSaveChecked?: boolean\n  dexSave?: string\n  dexSaveChecked?: boolean\n  conSave?: string\n  conSaveChecked?: boolean\n  intSave?: string\n  intSaveChecked?: boolean\n  wisSave?: string\n  wisSaveChecked?: boolean\n  chaSave?: string\n  chaSaveChecked?: boolean\n\n  skillAcrobatics?: string\n  skillAcrobaticsChecked?: boolean\n  skillAnimalHandling?: string\n  skillAnimalHandlingChecked?: boolean\n  skillArcana?: string\n  skillArcanaChecked?: boolean\n  skillAthletics?: string\n  skillAthleticsChecked?: boolean\n  skillDeception?: string\n  skillDeceptionChecked?: boolean\n  skillHistory?: string\n  skillHistoryChecked?: boolean\n  skillInsight?: string\n  skillInsightChecked?: boolean\n  skillIntimidation?: string\n  skillIntimidationChecked?: boolean\n  skillInvestigation?: string\n  skillInvestigationChecked?: boolean\n  skillMedicine?: string\n  skillMedicineChecked?: boolean\n  skillNature?: string\n  skillNatureChecked?: boolean\n  skillPerception?: string\n  skillPerceptionChecked?: boolean\n  skillPerformance?: string\n  skillPerformanceChecked?: boolean\n  skillPersuasion?: string\n  skillPersuasionChecked?: boolean\n  skillReligion?: string\n  skillReligionChecked?: boolean\n  skillSlightOfHand?: string\n  skillSlightOfHandChecked?: boolean\n  skillStealth?: string\n  skillStealthChecked?: boolean\n  skillSurvival?: string\n  skillSurvivalChecked?: boolean\n\n  passivePerception?: string\n  otherProficiencies?: string\n\n  ac?: string\n  init?: string\n  speed?: string\n\n  maxHp?: string\n  hp?: string\n  tempHp?: string\n\n  hitDiceMax?: string\n  hitDice?: string\n\n  deathsaveSuccesses?: number\n  deathsaveFailures?: number\n\n  attacks?: any[]\n  attacksText?: string\n\n  cp?: string\n  sp?: string\n  ep?: string\n  gp?: string\n  pp?: string\n  equipment?: string\n  equipment2?: string\n\n  personalityTraits?: string\n  ideals?: string\n  bonds?: string\n  flaws?: string\n\n  featuresTraits?: string\n\n  age?: string\n  height?: string\n  weight?: string\n  eyes?: string\n  skin?: string\n  hair?: string\n\n  appearance?: string\n  backstory?: string\n\n  factionImg?: string\n  factionRank?: string\n  allies?: string\n  allies2?: string\n\n  additionalFeatures?: string\n  additionalFeatures2?: string\n\n  totalNonConsumableMagicItems?: string\n  treasure?: string\n  treasure2?: string\n\n  spellcastingClass?: string\n  preparedSpellsTotal?: string\n  spellSaveDC?: string\n  spellAttackBonus?: string\n\n  cantrips?: any[]\n\n  lvl1SpellSlotsTotal?: string\n  lvl1SpellSlotsUsed?: number\n  lvl1Spells?: any[]\n\n  lvl2SpellSlotsTotal?: string\n  lvl2SpellSlotsUsed?: number\n  lvl2Spells?: any[]\n\n  lvl3SpellSlotsTotal?: string\n  lvl3SpellSlotsUsed?: number\n  lvl3Spells?: any[]\n\n  lvl4SpellSlotsTotal?: string\n  lvl4SpellSlotsUsed?: number\n  lvl4Spells?: any[]\n\n  lvl5SpellSlotsTotal?: string\n  lvl5SpellSlotsUsed?: number\n  lvl5Spells?: any[]\n\n  lvl6SpellSlotsTotal?: string\n  lvl6SpellSlotsUsed?: number\n  lvl6Spells?: any[]\n\n  lvl7SpellSlotsTotal?: string\n  lvl7SpellSlotsUsed?: number\n  lvl7Spells?: any[]\n\n  lvl8SpellSlotsTotal?: string\n  lvl8SpellSlotsUsed?: number\n  lvl8Spells?: any[]\n\n  lvl9SpellSlotsTotal?: string\n  lvl9SpellSlotsUsed?: number\n  lvl9Spells?: any[]\n}\n","import React from 'react'\n\nfunction StatBox(props: {\n  classes?: string\n  value: string | number | readonly string[] | undefined\n  label: React.ReactNode\n  onChange: (arg0: any, arg1: string) => void\n  name: any\n}) {\n  let classes = 'd-and-d-statbox'\n  if (props.classes) {\n    classes += ' ' + props.classes\n  }\n\n  let modifier: string = ''\n  if (props.value && !isNaN(Number(props.value))) {\n    const modifierNum = Math.floor((Number(props.value) - 10) / 2)\n    if (modifierNum > 0) {\n      modifier = '+' + modifierNum\n    } else {\n      modifier = modifierNum.toString()\n    }\n  }\n\n  return (\n    <div>\n      <div className={classes}>\n        <label>{props.label}</label>\n        <div className='d-and-d-statbox-modifier'>{modifier}</div>\n      </div>\n      <div className='d-and-d-statbox-value'>\n        <input\n          type='text'\n          value={props.value ? props.value : ''}\n          onChange={(e) => props.onChange(props.name, e.target.value)}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default StatBox\n","import React from 'react'\n\nfunction StatRow(props: {\n  classes?: string\n  value: string | number | readonly string[] | undefined\n  onChange: (arg0: any, arg1: string) => void\n  name: any\n  label: React.ReactNode\n}) {\n  let classes = 'd-and-d-statrow'\n  if (props.classes) {\n    classes += ' ' + props.classes\n  }\n\n  return (\n    <div className={classes}>\n      <div className='d-and-d-statrow-value'>\n        <input\n          type='text'\n          value={props.value ? props.value : ''}\n          onChange={(e) => props.onChange(props.name, e.target.value)}\n        />\n      </div>\n      <div className='d-and-d-statrow-label'>\n        <label>{props.label}</label>\n      </div>\n    </div>\n  )\n}\n\nexport default StatRow\n","import React from 'react'\n\nfunction Skill(props: {\n  classes?: string\n  checked?: boolean\n  onChange: (arg0: string, arg1: string | boolean) => void\n  name: string\n  value: string | number | readonly string[] | undefined\n  label?: React.ReactNode\n  hint?: React.ReactNode\n}) {\n  let classes = 'd-and-d-skill'\n  if (props.classes) {\n    classes += ' ' + props.classes\n  }\n\n  return (\n    <div className={classes}>\n      <div\n        className={\n          props.checked ? 'd-and-d-skill-circle active' : 'd-and-d-skill-circle'\n        }\n        onClick={() => props.onChange(props.name + 'Checked', !props.checked)}\n      />\n      <input\n        type='text'\n        value={props.value ? props.value : ''}\n        onChange={(e) => props.onChange(props.name, e.target.value)}\n      />\n      <label>{props.label}</label>\n      {props.hint ? (\n        <span className='d-and-d-skill-hint'>{props.hint}</span>\n      ) : null}\n    </div>\n  )\n}\n\nexport default Skill\n","import React from 'react'\n\nfunction StatBox2(props: {\n  classes?: string\n  value: string | number | readonly string[] | undefined\n  onChange: (arg0: any, arg1: string) => void\n  name: any\n  labelTop?: {} | null | undefined\n  label?: React.ReactNode\n}) {\n  let classes = 'd-and-d-statbox type2'\n  if (props.classes) {\n    classes += ' ' + props.classes\n  }\n\n  return (\n    <div>\n      <div className={classes}>\n        <div className='d-and-d-statbox-modifier'>\n          <input\n            type='text'\n            value={props.value ? props.value : ''}\n            onChange={(e) => props.onChange(props.name, e.target.value)}\n          />\n        </div>\n        {props.labelTop != null ? (\n          <div>\n            <label className='label-top'>{props.labelTop}</label>\n          </div>\n        ) : null}\n        {props.label != null ? (\n          <div>\n            <label>{props.label}</label>\n          </div>\n        ) : null}\n      </div>\n    </div>\n  )\n}\n\nexport default StatBox2\n","import React from 'react'\n\nfunction DeathSave(props: {\n  classes?: string\n  label: React.ReactNode\n  value?: number\n  onChange: (arg0: any, arg1: number | null) => void\n  name: any\n}) {\n  let classes = 'd-and-d-deathsave'\n  if (props.classes) {\n    classes += ' ' + props.classes\n  }\n\n  return (\n    <div className={classes}>\n      <label>{props.label}</label>\n      <div style={{ display: 'inline-block' }}>\n        <div\n          className={\n            props.value && props.value >= 1\n              ? 'd-and-d-skill-circle active'\n              : 'd-and-d-skill-circle'\n          }\n          onClick={() =>\n            props.onChange(props.name, props.value === 1 ? null : 1)\n          }\n        />\n        =\n        <div\n          className={\n            props.value && props.value >= 2\n              ? 'd-and-d-skill-circle active'\n              : 'd-and-d-skill-circle'\n          }\n          onClick={() =>\n            props.onChange(props.name, props.value === 2 ? null : 2)\n          }\n        />\n        =\n        <div\n          className={\n            props.value && props.value >= 3\n              ? 'd-and-d-skill-circle active'\n              : 'd-and-d-skill-circle'\n          }\n          onClick={() =>\n            props.onChange(props.name, props.value === 3 ? null : 3)\n          }\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default DeathSave\n","import React from 'react'\n\nfunction AttackTable(props: {\n  onChange: (arg0: any, arg1: any) => void\n  name: string\n  value?: any\n  classes?: string\n  rows: number\n}) {\n  function updateValue(index: React.Key, field: string, v: string) {\n    const value = getValue().slice()\n    value[index][field] = v\n    props.onChange(props.name, value)\n  }\n\n  function getValue() {\n    let value = props.value\n    if (!value) {\n      value = []\n    }\n    while (value.length < props.rows) {\n      value.push({})\n    }\n    return value\n  }\n\n  let classes = 'd-and-d-table'\n  if (props.classes) {\n    classes += ' ' + props.classes\n  }\n\n  return (\n    <table className={classes}>\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th style={{ width: '70px' }}>Atk Bonus</th>\n          <th>Damage/Type</th>\n        </tr>\n      </thead>\n      <tbody>\n        {getValue().map(\n          (\n            v: {\n              name: string | number | readonly string[] | undefined\n              bonus: string | number | readonly string[] | undefined\n              damage: string | number | readonly string[] | undefined\n            },\n            index: string\n          ) => {\n            return (\n              <tr key={'d-and-d-table-row-' + props.name + index}>\n                <td>\n                  <input\n                    type='text'\n                    value={v.name ? v.name : ''}\n                    onChange={(e) => updateValue(index, 'name', e.target.value)}\n                  />\n                </td>\n                <td>\n                  <input\n                    type='text'\n                    value={v.bonus ? v.bonus : ''}\n                    onChange={(e) =>\n                      updateValue(index, 'bonus', e.target.value)\n                    }\n                  />\n                </td>\n                <td>\n                  <input\n                    type='text'\n                    value={v.damage ? v.damage : ''}\n                    onChange={(e) =>\n                      updateValue(index, 'damage', e.target.value)\n                    }\n                  />\n                </td>\n              </tr>\n            )\n          }\n        )}\n      </tbody>\n    </table>\n  )\n}\n\nexport default AttackTable\n","import React from 'react'\n\nfunction Currency(props: {\n  classes?: string\n  label: React.ReactNode\n  value: string | number | readonly string[] | undefined\n  onChange: (arg0: any, arg1: string) => void\n  name: any\n}) {\n  let classes = 'd-and-d-currency'\n  if (props.classes) {\n    classes += ' ' + props.classes\n  }\n\n  return (\n    <div className={classes}>\n      <div className='d-and-d-currency-label'>\n        <label>{props.label}</label>\n      </div>\n      <div className='d-and-d-currency-value'>\n        <input\n          type='text'\n          value={props.value ? props.value : ''}\n          onChange={(e) => props.onChange(props.name, e.target.value)}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default Currency\n","import React from 'react'\n\n// eslint-disable-next-line no-unused-vars\nimport DnDCharacter from './DnDCharacter'\n\nimport Statbox from './Components/StatBox'\nimport StatRow from './Components/StatRow'\nimport Skill from './Components/Skill'\nimport StatBox2 from './Components/StatBox2'\nimport DeathSave from './Components/DeathSave'\nimport AttackTable from './Components/AttackTable'\nimport Currency from './Components/Currency'\n\nimport './dndstyles.css'\n\ninterface IDnDCharacterStatsSheetProps {\n  character?: DnDCharacter\n  defaultCharacter?: DnDCharacter\n  onCharacterChanged?: (\n    character: DnDCharacter,\n    changedField: string,\n    newValue: any\n  ) => void\n}\n\ninterface IDnDCharacterStatsSheetState {\n  character: DnDCharacter\n}\n\nconst initialState: IDnDCharacterStatsSheetState = {\n  character: {}\n}\n\nclass DnDCharacterStatsSheet extends React.Component<\n  IDnDCharacterStatsSheetProps,\n  IDnDCharacterStatsSheetState\n> {\n  constructor(props: IDnDCharacterStatsSheetProps) {\n    super(props)\n    if (props.defaultCharacter) {\n      initialState.character = props.defaultCharacter\n    }\n    this.state = initialState\n  }\n\n  updateCharacter(name: string, value: any) {\n    const oldCharacter = this.getCharacter()\n    const newCharacter: DnDCharacter = {}\n    Object.assign(newCharacter, oldCharacter)\n    newCharacter[name] = value\n\n    if (!this.props.character) {\n      // NOT CONTROLLED\n      this.setState({ character: newCharacter })\n    }\n\n    if (typeof this.props.onCharacterChanged === 'function') {\n      this.props.onCharacterChanged(newCharacter, name, value)\n    }\n  }\n\n  getCharacter() {\n    // NOT CONTROLLED\n    let character = this.state.character\n    if (this.props.character) {\n      // CONTROLLED\n      character = this.props.character\n    }\n    return character\n  }\n\n  render() {\n    const character = this.getCharacter()\n\n    return (\n      <div className='d-and-d-character-sheet container-xl mt-5 mb-5'>\n        <div>\n          <div className='row mb-4'>\n            <div className='col-md-3 pr-2 pl-2'>\n              <div className='d-and-d-page-title'>D&D</div>\n              <div className='d-and-d-attribute-collection char-name pr-3 pl-3'>\n                <input\n                  type='text'\n                  value={character.name ? character.name : ''}\n                  onChange={(e) => this.updateCharacter('name', e.target.value)}\n                />\n              </div>\n              <label\n                style={{\n                  width: '100%',\n                  textAlign: 'right',\n                  textTransform: 'uppercase',\n                  fontSize: '11px'\n                }}\n              >\n                Character Name\n              </label>\n            </div>\n            <div className='col-md-9 pr-2 pl-2'>\n              <div className='d-and-d-attribute-collection pr-3 pl-3'>\n                <div className='row pl-3 pr-3'>\n                  <div className='col-md-3 col-6 pl-0 pr-0'>\n                    <input\n                      type='text'\n                      value={character.classLevel ? character.classLevel : ''}\n                      onChange={(e) =>\n                        this.updateCharacter('classLevel', e.target.value)\n                      }\n                    />\n                    <label>Class & Level</label>\n                  </div>\n                  <div className='col-md-3 col-6 pl-0 pr-0'>\n                    <input\n                      type='text'\n                      value={character.background ? character.background : ''}\n                      onChange={(e) =>\n                        this.updateCharacter('background', e.target.value)\n                      }\n                    />\n                    <label>Background</label>\n                  </div>\n                  <div className='col-md-3 col-6 pl-0 pr-0'>\n                    <input\n                      type='text'\n                      value={character.playerName ? character.playerName : ''}\n                      onChange={(e) =>\n                        this.updateCharacter('playerName', e.target.value)\n                      }\n                    />\n                    <label>Player Name</label>\n                  </div>\n                  <div className='col-md-3 col-6 pl-0 pr-0'>\n                    <input\n                      type='text'\n                      value={character.faction ? character.faction : ''}\n                      onChange={(e) =>\n                        this.updateCharacter('faction', e.target.value)\n                      }\n                    />\n                    <label>Faction</label>\n                  </div>\n                </div>\n                <div className='row pl-3 pr-3'>\n                  <div className='col-md-3 col-6 pl-0 pr-0'>\n                    <input\n                      type='text'\n                      value={character.race ? character.race : ''}\n                      onChange={(e) =>\n                        this.updateCharacter('race', e.target.value)\n                      }\n                    />\n                    <label>Race</label>\n                  </div>\n                  <div className='col-md-3 col-6 pl-0 pr-0'>\n                    <input\n                      type='text'\n                      value={character.alignment ? character.alignment : ''}\n                      onChange={(e) =>\n                        this.updateCharacter('alignment', e.target.value)\n                      }\n                    />\n                    <label>Alignment</label>\n                  </div>\n                  <div className='col-md-3 col-6 pl-0 pr-0'>\n                    <input\n                      type='text'\n                      value={character.xp ? character.xp : ''}\n                      onChange={(e) =>\n                        this.updateCharacter('xp', e.target.value)\n                      }\n                    />\n                    <label>Experience Points</label>\n                  </div>\n                  <div className='col-md-3 col-6 pl-0 pr-0'>\n                    <input\n                      type='text'\n                      value={character.dciNo ? character.dciNo : ''}\n                      onChange={(e) =>\n                        this.updateCharacter('dciNo', e.target.value)\n                      }\n                    />\n                    <label>DCI Number</label>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className='row'>\n            <div className='col-md-4'>\n              <div className='row'>\n                <div className='col-4 pr-1'>\n                  <div className='d-and-d-box gray'>\n                    <Statbox\n                      label='Strength'\n                      name='str'\n                      value={character.str}\n                      onChange={(name: string, value: any) => {\n                        this.updateCharacter(name, value)\n                      }}\n                    />\n                    <Statbox\n                      label='Dexterity'\n                      name='dex'\n                      value={character.dex}\n                      onChange={(name: string, value: any) => {\n                        this.updateCharacter(name, value)\n                      }}\n                    />\n                    <Statbox\n                      label='Constitution'\n                      name='con'\n                      value={character.con}\n                      onChange={(name: string, value: any) => {\n                        this.updateCharacter(name, value)\n                      }}\n                    />\n                    <Statbox\n                      label='Intelligence'\n                      name='int'\n                      value={character.int}\n                      onChange={(name: string, value: any) => {\n                        this.updateCharacter(name, value)\n                      }}\n                    />\n                    <Statbox\n                      label='Wisdom'\n                      name='wis'\n                      value={character.wis}\n                      onChange={(name: string, value: any) => {\n                        this.updateCharacter(name, value)\n                      }}\n                    />\n                    <Statbox\n                      label='Charisma'\n                      name='cha'\n                      value={character.cha}\n                      onChange={(name: string, value: any) => {\n                        this.updateCharacter(name, value)\n                      }}\n                    />\n                  </div>\n                </div>\n                <div className='col-8'>\n                  <StatRow\n                    label='Inspiration'\n                    name='inspiration'\n                    value={character.inspiration}\n                    onChange={(name: string, value: any) => {\n                      this.updateCharacter(name, value)\n                    }}\n                  />\n                  <StatRow\n                    classes='rounded'\n                    label='Proficiency Bonus'\n                    name='proficiencyBonus'\n                    value={character.proficiencyBonus}\n                    onChange={(name: string, value: any) => {\n                      this.updateCharacter(name, value)\n                    }}\n                  />\n                  <div className='d-and-d-box'>\n                    <div style={{ textAlign: 'left' }}>\n                      <Skill\n                        label='Strength'\n                        name='strSave'\n                        value={character.strSave}\n                        checked={character.strSaveChecked}\n                        onChange={(name: string, value: any) => {\n                          this.updateCharacter(name, value)\n                        }}\n                      />\n                      <Skill\n                        label='Dexterity'\n                        name='dexSave'\n                        value={character.dexSave}\n                        checked={character.dexSaveChecked}\n                        onChange={(name: string, value: any) => {\n                          this.updateCharacter(name, value)\n                        }}\n                      />\n                      <Skill\n                        label='Constitution'\n                        name='conSave'\n                        value={character.conSave}\n                        checked={character.conSaveChecked}\n                        onChange={(name: string, value: any) => {\n                          this.updateCharacter(name, value)\n                        }}\n                      />\n                      <Skill\n                        label='Intelligence'\n                        name='intSave'\n                        value={character.intSave}\n                        checked={character.intSaveChecked}\n                        onChange={(name: string, value: any) => {\n                          this.updateCharacter(name, value)\n                        }}\n                      />\n                      <Skill\n                        label='Wisdom'\n                        name='wisSave'\n                        value={character.wisSave}\n                        checked={character.wisSaveChecked}\n                        onChange={(name: string, value: any) => {\n                          this.updateCharacter(name, value)\n                        }}\n                      />\n                      <Skill\n                        label='Charisma'\n                        name='chaSave'\n                        value={character.chaSave}\n                        checked={character.chaSaveChecked}\n                        onChange={(name: string, value: any) => {\n                          this.updateCharacter(name, value)\n                        }}\n                      />\n                    </div>\n                    <label\n                      className='d-and-d-title'\n                      style={{ marginTop: '10px' }}\n                    >\n                      Saving Throws\n                    </label>\n                  </div>\n                  <div className='d-and-d-box'>\n                    <div style={{ textAlign: 'left' }}>\n                      <Skill\n                        label='Acrobatics'\n                        hint='(Dex)'\n                        name='skillAcrobatics'\n                        value={character.skillAcrobatics}\n                        checked={character.skillAcrobaticsChecked}\n                        onChange={(name: string, value: any) => {\n                          this.updateCharacter(name, value)\n                        }}\n                      />\n                      <Skill\n                        label='Animal Handling'\n                        hint='(Wis)'\n                        name='skillAnimalHandling'\n                        value={character.skillAnimalHandling}\n                        checked={character.skillAnimalHandlingChecked}\n                        onChange={(name: string, value: any) => {\n                          this.updateCharacter(name, value)\n                        }}\n                      />\n                      <Skill\n                        label='Arcana'\n                        hint='(Int)'\n                        name='skillArcana'\n                        value={character.skillArcana}\n                        checked={character.skillArcanaChecked}\n                        onChange={(name: string, value: any) => {\n                          this.updateCharacter(name, value)\n                        }}\n                      />\n                      <Skill\n                        label='Athletics'\n                        hint='(Str)'\n                        name='skillAthletics'\n                        value={character.skillAthletics}\n                        checked={character.skillAthleticsChecked}\n                        onChange={(name: string, value: any) => {\n                          this.updateCharacter(name, value)\n                        }}\n                      />\n                      <Skill\n                        label='Deception'\n                        hint='(Cha)'\n                        name='skillDeception'\n                        value={character.skillDeception}\n                        checked={character.skillDeceptionChecked}\n                        onChange={(name: string, value: any) => {\n                          this.updateCharacter(name, value)\n                        }}\n                      />\n                      <Skill\n                        label='History'\n                        hint='(Int)'\n                        name='skillHistory'\n                        value={character.skillHistory}\n                        checked={character.skillHistoryChecked}\n                        onChange={(name: string, value: any) => {\n                          this.updateCharacter(name, value)\n                        }}\n                      />\n                      <Skill\n                        label='Insight'\n                        hint='(Wis)'\n                        name='skillInsight'\n                        value={character.skillInsight}\n                        checked={character.skillInsightChecked}\n                        onChange={(name: string, value: any) => {\n                          this.updateCharacter(name, value)\n                        }}\n                      />\n                      <Skill\n                        label='Intimidation'\n                        hint='(Cha)'\n                        name='skillIntimidation'\n                        value={character.skillIntimidation}\n                        checked={character.skillIntimidationChecked}\n                        onChange={(name: string, value: any) => {\n                          this.updateCharacter(name, value)\n                        }}\n                      />\n                      <Skill\n                        label='Investigation'\n                        hint='(Int)'\n                        name='skillInvestigation'\n                        value={character.skillInvestigation}\n                        checked={character.skillInvestigationChecked}\n                        onChange={(name: string, value: any) => {\n                          this.updateCharacter(name, value)\n                        }}\n                      />\n                      <Skill\n                        label='Medicine'\n                        hint='(Wis)'\n                        name='skillMedicine'\n                        value={character.skillMedicine}\n                        checked={character.skillMedicineChecked}\n                        onChange={(name: string, value: any) => {\n                          this.updateCharacter(name, value)\n                        }}\n                      />\n                      <Skill\n                        label='Nature'\n                        hint='(Int)'\n                        name='skillNature'\n                        value={character.skillNature}\n                        checked={character.skillNatureChecked}\n                        onChange={(name: string, value: any) => {\n                          this.updateCharacter(name, value)\n                        }}\n                      />\n                      <Skill\n                        label='Perception'\n                        hint='(Wis)'\n                        name='skillPerception'\n                        value={character.skillPerception}\n                        checked={character.skillPerceptionChecked}\n                        onChange={(name: string, value: any) => {\n                          this.updateCharacter(name, value)\n                        }}\n                      />\n                      <Skill\n                        label='Performance'\n                        hint='(Cha)'\n                        name='skillPerformance'\n                        value={character.skillPerformance}\n                        checked={character.skillPerformanceChecked}\n                        onChange={(name: string, value: any) => {\n                          this.updateCharacter(name, value)\n                        }}\n                      />\n                      <Skill\n                        label='Persuasion'\n                        hint='(Cha)'\n                        name='skillPersuasion'\n                        value={character.skillPersuasion}\n                        checked={character.skillPersuasionChecked}\n                        onChange={(name: string, value: any) => {\n                          this.updateCharacter(name, value)\n                        }}\n                      />\n                      <Skill\n                        label='Religion'\n                        hint='(Int)'\n                        name='skillReligion'\n                        value={character.skillReligion}\n                        checked={character.skillReligionChecked}\n                        onChange={(name: string, value: any) => {\n                          this.updateCharacter(name, value)\n                        }}\n                      />\n                      <Skill\n                        label='Sleight of Hand'\n                        hint='(Dex)'\n                        name='skillSlightOfHand'\n                        value={character.skillSlightOfHand}\n                        checked={character.skillSlightOfHandChecked}\n                        onChange={(name: string, value: any) => {\n                          this.updateCharacter(name, value)\n                        }}\n                      />\n                      <Skill\n                        label='Stealth'\n                        hint='(Dex)'\n                        name='skillStealth'\n                        value={character.skillStealth}\n                        checked={character.skillStealthChecked}\n                        onChange={(name: string, value: any) => {\n                          this.updateCharacter(name, value)\n                        }}\n                      />\n                      <Skill\n                        label='Survival'\n                        hint='(Wis)'\n                        name='skillSurvival'\n                        value={character.skillSurvival}\n                        checked={character.skillSurvivalChecked}\n                        onChange={(name: string, value: any) => {\n                          this.updateCharacter(name, value)\n                        }}\n                      />\n                    </div>\n                    <label\n                      className='d-and-d-title'\n                      style={{ marginTop: '10px' }}\n                    >\n                      Skills\n                    </label>\n                  </div>\n                </div>\n              </div>\n              <div className='mt-2'>\n                <StatRow\n                  classes='rounded rounded-sides'\n                  label='Passive Wisdom (Perception)'\n                  name='passivePerception'\n                  value={character.passivePerception}\n                  onChange={(name: string, value: any) => {\n                    this.updateCharacter(name, value)\n                  }}\n                />\n              </div>\n              <div className='d-and-d-box mt-4'>\n                <textarea\n                  value={\n                    character.otherProficiencies\n                      ? character.otherProficiencies\n                      : ''\n                  }\n                  onChange={(e) =>\n                    this.updateCharacter('otherProficiencies', e.target.value)\n                  }\n                  rows={12}\n                />\n                <label className='d-and-d-title' style={{ marginTop: '10px' }}>\n                  Other Proficiencies & Languages\n                </label>\n              </div>\n            </div>\n\n            <div className='col-md-4'>\n              <div className='d-and-d-box gray'>\n                <div className='row'>\n                  <div className='col-4 pr-2'>\n                    <StatBox2\n                      classes='shield'\n                      labelTop='Armour'\n                      label='Class'\n                      name='ac'\n                      value={character.ac}\n                      onChange={(name: string, value: any) => {\n                        this.updateCharacter(name, value)\n                      }}\n                    />\n                  </div>\n                  <div className='col-4 pr-2 pl-2'>\n                    <StatBox2\n                      label='Initiative'\n                      name='init'\n                      value={character.init}\n                      onChange={(name: string, value: any) => {\n                        this.updateCharacter(name, value)\n                      }}\n                    />\n                  </div>\n                  <div className='col-4 pl-2'>\n                    <StatBox2\n                      label='Speed'\n                      name='speed'\n                      value={character.speed}\n                      onChange={(name: string, value: any) => {\n                        this.updateCharacter(name, value)\n                      }}\n                    />\n                  </div>\n                </div>\n\n                <div\n                  className='d-and-d-box white'\n                  style={{\n                    borderRadius: '8px 8px 0 0',\n                    marginBottom: '5px',\n                    paddingBottom: '5px'\n                  }}\n                >\n                  <div className='d-and-d-gray-text'>\n                    <label style={{ width: '95px' }}>Hit Point Maximum</label>\n                    <input\n                      type='text'\n                      style={{ width: 'calc(100% - 95px)' }}\n                      className='d-and-d-linput'\n                      value={character.maxHp ? character.maxHp : ''}\n                      onChange={(e) =>\n                        this.updateCharacter('maxHp', e.target.value)\n                      }\n                    />\n                  </div>\n                  <input\n                    type='text'\n                    className='d-and-d-cinput'\n                    value={character.hp ? character.hp : ''}\n                    onChange={(e) => this.updateCharacter('hp', e.target.value)}\n                  />\n                  <label className='d-and-d-title' style={{ marginTop: '5px' }}>\n                    Current Hit Points\n                  </label>\n                </div>\n                <div\n                  className='d-and-d-box white mb-2'\n                  style={{ borderRadius: '0 0 8px 8px', paddingBottom: '5px' }}\n                >\n                  <input\n                    type='text'\n                    className='d-and-d-cinput'\n                    value={character.tempHp ? character.tempHp : ''}\n                    onChange={(e) =>\n                      this.updateCharacter('tempHp', e.target.value)\n                    }\n                  />\n                  <label className='d-and-d-title' style={{ marginTop: '5px' }}>\n                    Temporary Hit Points\n                  </label>\n                </div>\n\n                <div className='row mt-1'>\n                  <div className='col-6 pr-1'>\n                    <div\n                      className='d-and-d-box white mb-0'\n                      style={{ paddingBottom: '5px' }}\n                    >\n                      <div className='d-and-d-gray-text'>\n                        <label style={{ width: '25px' }}>Total</label>\n                        <input\n                          type='text'\n                          style={{ width: 'calc(100% - 25px)' }}\n                          className='d-and-d-linput'\n                          value={\n                            character.hitDiceMax ? character.hitDiceMax : ''\n                          }\n                          onChange={(e) =>\n                            this.updateCharacter('hitDiceMax', e.target.value)\n                          }\n                        />\n                      </div>\n                      <input\n                        type='text'\n                        className='d-and-d-cinput'\n                        value={character.hitDice ? character.hitDice : ''}\n                        onChange={(e) =>\n                          this.updateCharacter('hitDice', e.target.value)\n                        }\n                      />\n                      <label\n                        className='d-and-d-title'\n                        style={{ marginTop: '5px' }}\n                      >\n                        Hit Dice\n                      </label>\n                    </div>\n                  </div>\n                  <div className='col-6 pl-1'>\n                    <div\n                      className='d-and-d-box white mb-0'\n                      style={{ paddingBottom: '5px' }}\n                    >\n                      <DeathSave\n                        classes='d-and-d-save-success'\n                        label='Sucesses'\n                        name='deathsaveSuccesses'\n                        value={character.deathsaveSuccesses}\n                        onChange={(name: string, value: any) => {\n                          this.updateCharacter(name, value)\n                        }}\n                      />\n                      <DeathSave\n                        classes='d-and-d-save-failure'\n                        label='Failures'\n                        name='deathsaveFailures'\n                        value={character.deathsaveFailures}\n                        onChange={(name: string, value: any) => {\n                          this.updateCharacter(name, value)\n                        }}\n                      />\n                      <label\n                        className='d-and-d-title'\n                        style={{ marginTop: '6px' }}\n                      >\n                        Death Saves\n                      </label>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div className='d-and-d-box mt-3'>\n                <AttackTable\n                  rows={3}\n                  name='attacks'\n                  value={character.attacks}\n                  onChange={(name: string, value: any) => {\n                    this.updateCharacter(name, value)\n                  }}\n                />\n                <textarea\n                  value={character.attacksText ? character.attacksText : ''}\n                  onChange={(e) =>\n                    this.updateCharacter('attacksText', e.target.value)\n                  }\n                  rows={6}\n                />\n                <label className='d-and-d-title' style={{ marginTop: '10px' }}>\n                  Attacks & Spellcasting\n                </label>\n              </div>\n\n              <div className='d-and-d-box mt-4'>\n                <div className='row'>\n                  <div className='' style={{ width: '100px' }}>\n                    <Currency\n                      label='CP'\n                      name='cp'\n                      value={character.cp}\n                      onChange={(name: string, value: any) => {\n                        this.updateCharacter(name, value)\n                      }}\n                    />\n                    <Currency\n                      label='SP'\n                      name='sp'\n                      value={character.sp}\n                      onChange={(name: string, value: any) => {\n                        this.updateCharacter(name, value)\n                      }}\n                    />\n                    <Currency\n                      label='EP'\n                      name='ep'\n                      value={character.ep}\n                      onChange={(name: string, value: any) => {\n                        this.updateCharacter(name, value)\n                      }}\n                    />\n                    <Currency\n                      label='GP'\n                      name='gp'\n                      value={character.gp}\n                      onChange={(name: string, value: any) => {\n                        this.updateCharacter(name, value)\n                      }}\n                    />\n                    <Currency\n                      label='PP'\n                      name='pp'\n                      value={character.pp}\n                      onChange={(name: string, value: any) => {\n                        this.updateCharacter(name, value)\n                      }}\n                    />\n                  </div>\n                  <div className='col'>\n                    <textarea\n                      className='d-and-d-equipment-indent'\n                      value={character.equipment ? character.equipment : ''}\n                      onChange={(e) =>\n                        this.updateCharacter('equipment', e.target.value)\n                      }\n                      rows={10}\n                    />\n                  </div>\n                  <div className='col-md-12'>\n                    <textarea\n                      value={character.equipment2 ? character.equipment2 : ''}\n                      onChange={(e) =>\n                        this.updateCharacter('equipment2', e.target.value)\n                      }\n                      rows={4}\n                    />\n                  </div>\n                </div>\n                <label className='d-and-d-title' style={{ marginTop: '10px' }}>\n                  Equipment\n                </label>\n              </div>\n            </div>\n\n            <div className='col-md-4'>\n              <div\n                className='d-and-d-box gray'\n                style={{ marginBottom: '17px' }}\n              >\n                <div\n                  className='d-and-d-box white'\n                  style={{\n                    borderRadius: '8px 8px 0 0',\n                    marginBottom: '5px',\n                    paddingTop: '1px',\n                    paddingBottom: '5px'\n                  }}\n                >\n                  <textarea\n                    value={\n                      character.personalityTraits\n                        ? character.personalityTraits\n                        : ''\n                    }\n                    onChange={(e) =>\n                      this.updateCharacter('personalityTraits', e.target.value)\n                    }\n                    rows={3}\n                  />\n                  <label className='d-and-d-title'>Personality Traits</label>\n                </div>\n                <div\n                  className='d-and-d-box white'\n                  style={{\n                    borderRadius: '0 0 0 0',\n                    marginBottom: '5px',\n                    paddingTop: '1px',\n                    paddingBottom: '5px'\n                  }}\n                >\n                  <textarea\n                    value={character.ideals ? character.ideals : ''}\n                    onChange={(e) =>\n                      this.updateCharacter('ideals', e.target.value)\n                    }\n                    rows={3}\n                  />\n                  <label className='d-and-d-title'>Ideals</label>\n                </div>\n                <div\n                  className='d-and-d-box white'\n                  style={{\n                    borderRadius: '0 0 0 0',\n                    marginBottom: '5px',\n                    paddingTop: '1px',\n                    paddingBottom: '5px'\n                  }}\n                >\n                  <textarea\n                    value={character.bonds ? character.bonds : ''}\n                    onChange={(e) =>\n                      this.updateCharacter('bonds', e.target.value)\n                    }\n                    rows={2}\n                  />\n                  <label className='d-and-d-title'>Bonds</label>\n                </div>\n                <div\n                  className='d-and-d-box white'\n                  style={{\n                    borderRadius: '0 0 8px 8px',\n                    marginBottom: '0px',\n                    paddingTop: '1px',\n                    paddingBottom: '4px'\n                  }}\n                >\n                  <textarea\n                    value={character.flaws ? character.flaws : ''}\n                    onChange={(e) =>\n                      this.updateCharacter('flaws', e.target.value)\n                    }\n                    rows={2}\n                  />\n                  <label className='d-and-d-title'>Flaws</label>\n                </div>\n              </div>\n              <div className='d-and-d-box mt-3'>\n                <textarea\n                  style={{ paddingBottom: '5px' }}\n                  value={\n                    character.featuresTraits ? character.featuresTraits : ''\n                  }\n                  onChange={(e) =>\n                    this.updateCharacter('featuresTraits', e.target.value)\n                  }\n                  rows={27}\n                />\n                <label className='d-and-d-title' style={{ marginTop: '10px' }}>\n                  Features & Traits\n                </label>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default DnDCharacterStatsSheet\n","import React from 'react'\n\nfunction Image(props: {\n  classes?: string\n  value: any\n  onChange: (arg0: any, arg1: string) => void\n  name: any\n}) {\n  function importImage(event: any) {\n    console.log(event)\n    if (event.target.files.length > 0) {\n      console.log(event.target.files)\n      if (event.target.files[0].size > 2000000) {\n        window.alert(\n          'Image is too large. Max size is 2 Mb. Please reduce the size and upload again.'\n        )\n        return\n      }\n\n      var fr = new FileReader()\n\n      fr.onload = function (e) {\n        if (\n          e.target &&\n          e.target.result &&\n          typeof e.target.result === 'string'\n        ) {\n          props.onChange(props.name, e.target.result)\n        }\n      }\n\n      fr.readAsDataURL(event.target.files[0])\n    }\n  }\n\n  let classes = 'd-and-d-image'\n  if (props.classes) {\n    classes += ' ' + props.classes\n  }\n\n  const elementId = 'd-and-d-image-' + props.name\n\n  return (\n    <div\n      className={classes}\n      style={{\n        backgroundImage: props.value ? 'url(' + props.value + ')' : ''\n      }}\n      onClick={() => document.getElementById(elementId)?.click()}\n    >\n      <input\n        style={{ display: 'none' }}\n        type='file'\n        id={elementId}\n        accept='image/*'\n        onChange={(e) => importImage(e)}\n      />\n    </div>\n  )\n}\n\nexport default Image\n","/* eslint-disable prettier/prettier */\nimport React from 'react'\n\n// eslint-disable-next-line no-unused-vars\nimport DnDCharacter from './DnDCharacter'\n\nimport StatRow from './Components/StatRow'\nimport Image from './Components/Image'\n\nimport './dndstyles.css'\n\ninterface IDnDCharacterProfileSheetProps {\n  character?: DnDCharacter\n  defaultCharacter?: DnDCharacter\n  onCharacterChanged?: (\n    character: DnDCharacter,\n    changedField: string,\n    newValue: any\n  ) => void\n}\n\ninterface IDnDCharacterProfileSheetState {\n  character: DnDCharacter\n}\n\nconst initialState: IDnDCharacterProfileSheetState = {\n  character: {}\n}\n\nclass DnDCharacterProfileSheet extends React.Component<\n  IDnDCharacterProfileSheetProps,\n  IDnDCharacterProfileSheetState\n> {\n  constructor(props: IDnDCharacterProfileSheetProps) {\n    super(props)\n    if (props.defaultCharacter) {\n      initialState.character = props.defaultCharacter\n    }\n    this.state = initialState\n  }\n\n  updateCharacter(name: string, value: any) {\n    const oldCharacter = this.getCharacter()\n    const newCharacter: DnDCharacter = {}\n    Object.assign(newCharacter, oldCharacter)\n    newCharacter[name] = value\n\n    if (!this.props.character) {\n      // NOT CONTROLLED\n      this.setState({ character: newCharacter })\n    }\n\n    if (typeof this.props.onCharacterChanged === 'function') {\n      this.props.onCharacterChanged(newCharacter, name, value)\n    }\n  }\n\n  getCharacter() {\n    // NOT CONTROLLED\n    let character = this.state.character\n    if (this.props.character) {\n      // CONTROLLED\n      character = this.props.character\n    }\n    return character\n  }\n\n  render() {\n    const character = this.getCharacter()\n\n    return (\n      <div className='d-and-d-character-sheet container-xl mt-5 mb-5'>\n        <div>\n          <div className='row mb-4'>\n            <div className='col-md-3 pr-2 pl-2'>\n              <div className='d-and-d-page-title'>D&D</div>\n              <div className='d-and-d-attribute-collection char-name pr-3 pl-3'>\n                <input\n                  type='text'\n                  value={character.name ? character.name : ''}\n                  onChange={(e) => this.updateCharacter('name', e.target.value)}\n                />\n              </div>\n              <label\n                style={{\n                  width: '100%',\n                  textAlign: 'right',\n                  textTransform: 'uppercase',\n                  fontSize: '11px'\n                }}\n              >\n                Character Name\n              </label>\n            </div>\n            <div className='col-md-9 pr-2 pl-2'>\n              <div className='d-and-d-attribute-collection pr-3 pl-3'>\n                <div className='row pl-3 pr-3'>\n                  <div className='col-md-4 col-6 pl-0 pr-0'>\n                    <input\n                      type='text'\n                      value={character.age ? character.age : ''}\n                      onChange={(e) =>\n                        this.updateCharacter('age', e.target.value)\n                      }\n                    />\n                    <label>Age</label>\n                  </div>\n                  <div className='col-md-4 col-6 pl-0 pr-0'>\n                    <input\n                      type='text'\n                      value={character.height ? character.height : ''}\n                      onChange={(e) =>\n                        this.updateCharacter('height', e.target.value)\n                      }\n                    />\n                    <label>Height</label>\n                  </div>\n                  <div className='col-md-4 col-6 pl-0 pr-0'>\n                    <input\n                      type='text'\n                      value={character.weight ? character.weight : ''}\n                      onChange={(e) =>\n                        this.updateCharacter('weight', e.target.value)\n                      }\n                    />\n                    <label>Weight</label>\n                  </div>\n                </div>\n                <div className='row pl-3 pr-3'>\n                  <div className='col-md-4 col-6 pl-0 pr-0'>\n                    <input\n                      type='text'\n                      value={character.eyes ? character.eyes : ''}\n                      onChange={(e) =>\n                        this.updateCharacter('eyes', e.target.value)\n                      }\n                    />\n                    <label>Eyes</label>\n                  </div>\n                  <div className='col-md-4 col-6 pl-0 pr-0'>\n                    <input\n                      type='text'\n                      value={character.skin ? character.skin : ''}\n                      onChange={(e) =>\n                        this.updateCharacter('skin', e.target.value)\n                      }\n                    />\n                    <label>Skin</label>\n                  </div>\n                  <div className='col-md-4 col-6 pl-0 pr-0'>\n                    <input\n                      type='text'\n                      value={character.hair ? character.hair : ''}\n                      onChange={(e) =>\n                        this.updateCharacter('hair', e.target.value)\n                      }\n                    />\n                    <label>Hair</label>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className='row'>\n            <div className='col-md-4'>\n              <div className='d-and-d-box square'>\n                <Image \n                  name='appearance'\n                  value={character.appearance}\n                  onChange={(name: string, value: any) => {\n                    this.updateCharacter(name, value)\n                  }}\n                />\n                <label className='d-and-d-title' style={{ marginTop: '10px' }}>\n                  Character Appearance\n                </label>\n              </div>\n\n              <div className='d-and-d-box mt-3'>\n                <textarea\n                  style={{ paddingBottom: '5px' }}\n                  value={\n                    character.backstory ? character.backstory : ''\n                  }\n                  onChange={(e) =>\n                    this.updateCharacter('backstory', e.target.value)\n                  }\n                  rows={26}\n                />\n                <label className='d-and-d-title' style={{ marginTop: '10px' }}>\n                  Character Backstory\n                </label>\n              </div>\n            </div>\n\n            <div className='col-md-8'>\n              <div className='d-and-d-box'>\n                <div className='row'>\n                  <div className='col-md-6 border-right'>\n                    <div className='d-and-d-gray-text' style={{ paddingBottom: '1px' }}>\n                      <label style={{ width: '70px' }}>Faction Rank</label>\n                      <input\n                        type='text'\n                        style={{ width: 'calc(100% - 70px)' }}\n                        className='d-and-d-linput'\n                        value={character.factionRank ? character.factionRank : ''}\n                        onChange={(e) =>\n                          this.updateCharacter('factionRank', e.target.value)\n                        }\n                      />\n                    </div>\n\n                    <textarea\n                      style={{ paddingBottom: '5px' }}\n                      value={\n                        character.allies ? character.allies : ''\n                      }\n                      onChange={(e) =>\n                        this.updateCharacter('allies', e.target.value)\n                      }\n                      rows={16}\n                    />\n                  </div>\n                  <div className='col-md-6'>\n                    <div className='d-and-d-box gray noborder' style={{marginBottom: '13px'}}>\n                      <div className='d-and-d-faction-input'>\n                        <label>Faction</label>\n                        <input\n                          type='text'\n                          value={character.faction ? character.faction : ''}\n                          onChange={(e) =>\n                            this.updateCharacter('faction', e.target.value)\n                          }\n                        />\n                      </div>\n                      <Image \n                        classes='faction'\n                        name='factionImg'\n                        value={character.factionImg}\n                        onChange={(name: string, value: any) => {\n                          this.updateCharacter(name, value)\n                        }}\n                      />\n                    </div>\n\n                    <textarea\n                      style={{ paddingBottom: '5px' }}\n                      value={\n                        character.allies2 ? character.allies2 : ''\n                      }\n                      onChange={(e) =>\n                        this.updateCharacter('allies2', e.target.value)\n                      }\n                      rows={3}\n                    />\n                  </div>\n                </div>\n                \n                <label className='d-and-d-title' style={{ marginTop: '10px' }}>\n                  Allies & Organisations\n                </label>\n              </div>\n              \n              <div className='d-and-d-box mt-3'>\n                <div className='row'>\n                  <div className='col-md-6 border-right'>\n                    <textarea\n                      style={{ paddingBottom: '5px' }}\n                      value={\n                        character.additionalFeatures ? character.additionalFeatures : ''\n                      }\n                      onChange={(e) =>\n                        this.updateCharacter('additionalFeatures', e.target.value)\n                      }\n                      rows={13}\n                    />\n                  </div>\n                  <div className='col-md-6'>\n                    <textarea\n                      style={{ paddingBottom: '5px' }}\n                      value={\n                        character.additionalFeatures2 ? character.additionalFeatures2 : ''\n                      }\n                      onChange={(e) =>\n                        this.updateCharacter('additionalFeatures2', e.target.value)\n                      }\n                      rows={13}\n                    />\n                  </div>\n                </div>\n\n                <label className='d-and-d-title' style={{ marginTop: '10px' }}>\n                  Additional Features & Traits\n                </label>\n              </div>\n\n              <div className='d-and-d-box mt-3'>\n                <div className='row'>\n                  <div className='col-md-6 border-right'>\n                    <StatRow\n                      classes='m-2 rounded rounded-sides wide-input'\n                      label='Total Non-Consumable Magic Items'\n                      name='totalNonConsumableMagicItems'\n                      value={character.totalNonConsumableMagicItems}\n                      onChange={(name: string, value: any) => {\n                        this.updateCharacter(name, value)\n                      }}\n                    />\n\n                    <textarea\n                      style={{ paddingBottom: '5px', marginTop: '2px' }}\n                      value={\n                        character.treasure ? character.treasure : ''\n                      }\n                      onChange={(e) =>\n                        this.updateCharacter('treasure', e.target.value)\n                      }\n                      rows={8}\n                    />\n                  </div>\n                  <div className='col-md-6'>\n                    <textarea\n                      style={{ paddingBottom: '5px', marginTop: '4px' }}\n                      value={\n                        character.treasure2 ? character.treasure2 : ''\n                      }\n                      onChange={(e) =>\n                        this.updateCharacter('treasure2', e.target.value)\n                      }\n                      rows={10}\n                    />\n                  </div>\n                </div>\n                \n                <label className='d-and-d-title' style={{ marginTop: '4px' }}>\n                  Treasure\n                </label>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default DnDCharacterProfileSheet\n","/* eslint-disable prettier/prettier */\nimport React from 'react'\n\nfunction SpellTable(props: {\n  onChange: (arg0: any, arg1: any) => void\n  name: string\n  slotsName?: string\n  slotsUsedName?: string\n  level: number\n  value?: any\n  slotsValue?: string\n  slotsUsedValue?: number\n  classes?: string\n  rows: number\n  showLabels?: boolean\n  style?: React.CSSProperties | undefined\n}) {\n  function updateValue(index: React.Key, field: string, v: string | boolean) {\n    const value = getValue().slice()\n    value[index][field] = v\n    props.onChange(props.name, value)\n  }\n\n  function getValue() {\n    let value = props.value\n    if (!value) {\n      value = []\n    }\n    while (value.length < props.rows) {\n      value.push({})\n    }\n    return value\n  }\n\n  function renderSlotsRemaining() {\n    let slotCount = 6\n    if (props.slotsValue != null && props.slotsValue !== '' && Number(props.slotsValue) != null) {\n      slotCount = Number(props.slotsValue)\n    }\n\n    const slots = []\n    for (let i1 = 1; i1 <= slotCount; i1++) {\n      slots.push(\n        <div\n          key={'d-and-d-table-slot-' + props.name + i1}\n          className={\n            props.slotsUsedValue && props.slotsUsedValue >= i1\n              ? 'd-and-d-skill-circle active'\n              : 'd-and-d-skill-circle'\n          }\n          onClick={() =>\n            props.onChange(\n              props.slotsUsedName,\n              props.slotsUsedValue === i1 ? null : i1\n            )\n          }\n        />\n      )\n    }\n\n    return slots\n  }\n\n  let classes = 'd-and-d-spelllist'\n  if (props.classes) {\n    classes += ' ' + props.classes\n  }\n\n  return (\n    <div className={classes} style={props.style}>\n      {props.showLabels ? (\n        <div className='d-and-d-spell-header-labels'>\n          <label style={{ width: '20px' }}>Spell Level</label>\n          <label style={{ width: '80px' }}>Slots Total</label>\n          <label style={{ width: 'calc(100% - 100px)' }}>Slots Remaining</label>\n        </div>\n      ) : null}\n      <div className='d-and-d-spell-header'>\n        <div className='d-and-d-spell-level'>{props.level}</div>\n        {props.level === 0 ? (\n          <div className='d-and-d-spell-slots'>\n            <label>Cantrips</label>\n          </div>\n        ) : (\n          <div className='d-and-d-spell-slots'>\n            <div className='d-and-d-spell-slots-total'>\n              <input\n                type='text'\n                value={props.slotsValue ? props.slotsValue : ''}\n                onChange={(e) =>\n                  props.onChange(props.slotsName, e.target.value)\n                }\n              />\n            </div>\n            <div className='d-and-d-spell-slots-remaining'>\n              {renderSlotsRemaining()}\n            </div>\n          </div>\n        )}\n      </div>\n\n      <table>\n        {props.showLabels ? (\n          <thead>\n            <tr>\n              <th style={{ width: '30px', position: 'absolute', left: '-7px' }}>\n                Prepared\n              </th>\n              <th>Spell Name</th>\n            </tr>\n          </thead>\n        ) : null}\n        <tbody>\n          {getValue().map(\n            (\n              v: {\n                name: string | number | readonly string[] | undefined\n                prepared: boolean | undefined\n              },\n              index: string\n            ) => {\n              return (\n                <tr key={'d-and-d-table-row-' + props.name + index}>\n                  {props.level > 0 ? (\n                    <td className='d-and-d-spell-prepared'>\n                      <div\n                        className={\n                          v.prepared\n                            ? 'd-and-d-skill-circle active'\n                            : 'd-and-d-skill-circle'\n                        }\n                        onClick={() =>\n                          updateValue(index, 'prepared', !v.prepared)\n                        }\n                      />\n                    </td>\n                  ) : null}\n                  <td>\n                    <input\n                      type='text'\n                      value={v.name ? v.name : ''}\n                      onChange={(e) =>\n                        updateValue(index, 'name', e.target.value)\n                      }\n                    />\n                  </td>\n                </tr>\n              )\n            }\n          )}\n        </tbody>\n      </table>\n    </div>\n  )\n}\n\nexport default SpellTable\n","import React from 'react'\n\n// eslint-disable-next-line no-unused-vars\nimport DnDCharacter from './DnDCharacter'\n\nimport StatBox2 from './Components/StatBox2'\n\nimport './dndstyles.css'\nimport SpellTable from './Components/SpellTable'\n\ninterface IDnDCharacterSpellsSheetProps {\n  character?: DnDCharacter\n  defaultCharacter?: DnDCharacter\n  onCharacterChanged?: (\n    character: DnDCharacter,\n    changedField: string,\n    newValue: any\n  ) => void\n}\n\ninterface IDnDCharacterSpellsSheetState {\n  character: DnDCharacter\n}\n\nconst initialState: IDnDCharacterSpellsSheetState = {\n  character: {}\n}\n\nclass DnDCharacterSpellsSheet extends React.Component<\n  IDnDCharacterSpellsSheetProps,\n  IDnDCharacterSpellsSheetState\n> {\n  constructor(props: IDnDCharacterSpellsSheetProps) {\n    super(props)\n    if (props.defaultCharacter) {\n      initialState.character = props.defaultCharacter\n    }\n    this.state = initialState\n  }\n\n  updateCharacter(name: string, value: any) {\n    const oldCharacter = this.getCharacter()\n    const newCharacter: DnDCharacter = {}\n    Object.assign(newCharacter, oldCharacter)\n    newCharacter[name] = value\n\n    if (!this.props.character) {\n      // NOT CONTROLLED\n      this.setState({ character: newCharacter })\n    }\n\n    if (typeof this.props.onCharacterChanged === 'function') {\n      this.props.onCharacterChanged(newCharacter, name, value)\n    }\n  }\n\n  getCharacter() {\n    // NOT CONTROLLED\n    let character = this.state.character\n    if (this.props.character) {\n      // CONTROLLED\n      character = this.props.character\n    }\n    return character\n  }\n\n  render() {\n    const character = this.getCharacter()\n\n    return (\n      <div className='d-and-d-character-sheet container-xl mt-5 mb-5'>\n        <div>\n          <div className='row mb-4'>\n            <div className='col-md-3 pr-2 pl-2'>\n              <div className='d-and-d-page-title'>D&D</div>\n              <div className='d-and-d-attribute-collection char-name pr-3 pl-3'>\n                <input\n                  type='text'\n                  value={\n                    character.spellcastingClass\n                      ? character.spellcastingClass\n                      : ''\n                  }\n                  onChange={(e) =>\n                    this.updateCharacter('spellcastingClass', e.target.value)\n                  }\n                />\n              </div>\n              <label\n                style={{\n                  width: '100%',\n                  textAlign: 'right',\n                  textTransform: 'uppercase',\n                  fontSize: '11px'\n                }}\n              >\n                Spellcasting Class/Ability\n              </label>\n            </div>\n            <div className='col-md-9 pr-2 pl-2' style={{ marginTop: '18px' }}>\n              <div className='d-and-d-attribute-collection gray pr-3 pl-3'>\n                <div className='row pl-3 pr-3'>\n                  <div className='col-4 pr-4 pl-4'>\n                    <StatBox2\n                      name='preparedSpellsTotal'\n                      value={character.preparedSpellsTotal}\n                      onChange={(name: string, value: any) => {\n                        this.updateCharacter(name, value)\n                      }}\n                    />\n                    <label\n                      style={{\n                        textTransform: 'none',\n                        width: '100%',\n                        textAlign: 'center',\n                        marginBottom: '0'\n                      }}\n                    >\n                      Prepared Spells\n                    </label>\n                    <label\n                      style={{\n                        textTransform: 'none',\n                        width: '100%',\n                        textAlign: 'center',\n                        marginBottom: '0'\n                      }}\n                    >\n                      Total\n                    </label>\n                  </div>\n                  <div className='col-4 pr-4 pl-4'>\n                    <StatBox2\n                      name='spellSaveDC'\n                      value={character.spellSaveDC}\n                      onChange={(name: string, value: any) => {\n                        this.updateCharacter(name, value)\n                      }}\n                    />\n                    <label\n                      style={{\n                        textTransform: 'none',\n                        width: '100%',\n                        textAlign: 'center',\n                        marginBottom: '0'\n                      }}\n                    >\n                      Spell Save DC\n                    </label>\n                  </div>\n                  <div className='col-4 pr-4 pl-4'>\n                    <StatBox2\n                      name='spellAttackBonus'\n                      value={character.spellAttackBonus}\n                      onChange={(name: string, value: any) => {\n                        this.updateCharacter(name, value)\n                      }}\n                    />\n                    <label\n                      style={{\n                        textTransform: 'none',\n                        width: '100%',\n                        textAlign: 'center',\n                        marginBottom: '0'\n                      }}\n                    >\n                      Spell Attack\n                    </label>\n                    <label\n                      style={{\n                        textTransform: 'none',\n                        width: '100%',\n                        textAlign: 'center',\n                        marginBottom: '0'\n                      }}\n                    >\n                      Bonus\n                    </label>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className='row'>\n            <div className='col-md-4'>\n              <div className='d-and-d-box'>\n                <SpellTable\n                  level={0}\n                  rows={9}\n                  name='cantrips'\n                  value={character.cantrips}\n                  onChange={(name: string, value: any) => {\n                    this.updateCharacter(name, value)\n                  }}\n                  style={{ marginBottom: '23px' }}\n                />\n                <SpellTable\n                  level={1}\n                  rows={12}\n                  showLabels\n                  name='lvl1Spells'\n                  slotsName='lvl1SpellSlotsTotal'\n                  slotsUsedName='lvl1SpellSlotsUsed'\n                  value={character.lvl1Spells}\n                  slotsValue={character.lvl1SpellSlotsTotal}\n                  slotsUsedValue={character.lvl1SpellSlotsUsed}\n                  onChange={(name: string, value: any) => {\n                    this.updateCharacter(name, value)\n                  }}\n                />\n                <SpellTable\n                  level={2}\n                  rows={13}\n                  name='lvl2Spells'\n                  slotsName='lvl2SpellSlotsTotal'\n                  slotsUsedName='lvl2SpellSlotsUsed'\n                  value={character.lvl2Spells}\n                  slotsValue={character.lvl2SpellSlotsTotal}\n                  slotsUsedValue={character.lvl2SpellSlotsUsed}\n                  onChange={(name: string, value: any) => {\n                    this.updateCharacter(name, value)\n                  }}\n                />\n              </div>\n            </div>\n\n            <div className='col-md-4'>\n              <div className='d-and-d-box'>\n                <SpellTable\n                  level={3}\n                  rows={13}\n                  name='lvl3Spells'\n                  slotsName='lvl3SpellSlotsTotal'\n                  slotsUsedName='lvl3SpellSlotsUsed'\n                  value={character.lvl3Spells}\n                  slotsValue={character.lvl3SpellSlotsTotal}\n                  slotsUsedValue={character.lvl3SpellSlotsUsed}\n                  onChange={(name: string, value: any) => {\n                    this.updateCharacter(name, value)\n                  }}\n                />\n                <SpellTable\n                  level={4}\n                  rows={13}\n                  name='lvl4Spells'\n                  slotsName='lvl4SpellSlotsTotal'\n                  slotsUsedName='lvl4SpellSlotsUsed'\n                  value={character.lvl4Spells}\n                  slotsValue={character.lvl4SpellSlotsTotal}\n                  slotsUsedValue={character.lvl4SpellSlotsUsed}\n                  onChange={(name: string, value: any) => {\n                    this.updateCharacter(name, value)\n                  }}\n                />\n                <SpellTable\n                  level={5}\n                  rows={9}\n                  name='lvl5Spells'\n                  slotsName='lvl5SpellSlotsTotal'\n                  slotsUsedName='lvl5SpellSlotsUsed'\n                  value={character.lvl5Spells}\n                  slotsValue={character.lvl5SpellSlotsTotal}\n                  slotsUsedValue={character.lvl5SpellSlotsUsed}\n                  onChange={(name: string, value: any) => {\n                    this.updateCharacter(name, value)\n                  }}\n                />\n              </div>\n            </div>\n\n            <div className='col-md-4'>\n              <div className='d-and-d-box'>\n                <SpellTable\n                  level={6}\n                  rows={9}\n                  name='lvl6Spells'\n                  slotsName='lvl6SpellSlotsTotal'\n                  slotsUsedName='lvl6SpellSlotsUsed'\n                  value={character.lvl6Spells}\n                  slotsValue={character.lvl6SpellSlotsTotal}\n                  slotsUsedValue={character.lvl6SpellSlotsUsed}\n                  onChange={(name: string, value: any) => {\n                    this.updateCharacter(name, value)\n                  }}\n                />\n                <SpellTable\n                  level={7}\n                  rows={9}\n                  name='lvl7Spells'\n                  slotsName='lvl7SpellSlotsTotal'\n                  slotsUsedName='lvl7SpellSlotsUsed'\n                  value={character.lvl7Spells}\n                  slotsValue={character.lvl7SpellSlotsTotal}\n                  slotsUsedValue={character.lvl7SpellSlotsUsed}\n                  onChange={(name: string, value: any) => {\n                    this.updateCharacter(name, value)\n                  }}\n                />\n                <SpellTable\n                  level={8}\n                  rows={7}\n                  name='lvl8Spells'\n                  slotsName='lvl8SpellSlotsTotal'\n                  slotsUsedName='lvl8SpellSlotsUsed'\n                  value={character.lvl8Spells}\n                  slotsValue={character.lvl8SpellSlotsTotal}\n                  slotsUsedValue={character.lvl8SpellSlotsUsed}\n                  onChange={(name: string, value: any) => {\n                    this.updateCharacter(name, value)\n                  }}\n                />\n                <SpellTable\n                  level={9}\n                  rows={7}\n                  name='lvl9Spells'\n                  slotsName='lvl9SpellSlotsTotal'\n                  slotsUsedName='lvl9SpellSlotsUsed'\n                  value={character.lvl9Spells}\n                  slotsValue={character.lvl9SpellSlotsTotal}\n                  slotsUsedValue={character.lvl9SpellSlotsUsed}\n                  onChange={(name: string, value: any) => {\n                    this.updateCharacter(name, value)\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default DnDCharacterSpellsSheet\n"],"names":["DnDCharacter","StatBox","props","classes","modifier","value","isNaN","Number","modifierNum","Math","floor","toString","React","className","label","type","onChange","e","name","target","StatRow","Skill","checked","onClick","hint","StatBox2","labelTop","DeathSave","style","display","AttackTable","updateValue","index","field","v","getValue","slice","length","rows","push","width","map","key","bonus","damage","Currency","initialState","character","DnDCharacterStatsSheet","defaultCharacter","state","updateCharacter","oldCharacter","getCharacter","newCharacter","Object","assign","setState","onCharacterChanged","render","textAlign","textTransform","fontSize","classLevel","background","playerName","faction","race","alignment","xp","dciNo","Statbox","str","dex","con","wis","cha","inspiration","proficiencyBonus","strSave","strSaveChecked","dexSave","dexSaveChecked","conSave","conSaveChecked","intSave","intSaveChecked","wisSave","wisSaveChecked","chaSave","chaSaveChecked","marginTop","skillAcrobatics","skillAcrobaticsChecked","skillAnimalHandling","skillAnimalHandlingChecked","skillArcana","skillArcanaChecked","skillAthletics","skillAthleticsChecked","skillDeception","skillDeceptionChecked","skillHistory","skillHistoryChecked","skillInsight","skillInsightChecked","skillIntimidation","skillIntimidationChecked","skillInvestigation","skillInvestigationChecked","skillMedicine","skillMedicineChecked","skillNature","skillNatureChecked","skillPerception","skillPerceptionChecked","skillPerformance","skillPerformanceChecked","skillPersuasion","skillPersuasionChecked","skillReligion","skillReligionChecked","skillSlightOfHand","skillSlightOfHandChecked","skillStealth","skillStealthChecked","skillSurvival","skillSurvivalChecked","passivePerception","otherProficiencies","ac","init","speed","borderRadius","marginBottom","paddingBottom","maxHp","hp","tempHp","hitDiceMax","hitDice","deathsaveSuccesses","deathsaveFailures","attacks","attacksText","cp","sp","ep","gp","pp","equipment","equipment2","paddingTop","personalityTraits","ideals","bonds","flaws","featuresTraits","Component","Image","importImage","event","console","log","files","size","window","alert","fr","FileReader","onload","result","readAsDataURL","elementId","backgroundImage","document","getElementById","click","id","accept","DnDCharacterProfileSheet","age","height","weight","eyes","skin","hair","appearance","backstory","factionRank","allies","factionImg","allies2","additionalFeatures","additionalFeatures2","totalNonConsumableMagicItems","treasure","treasure2","SpellTable","renderSlotsRemaining","slotCount","slotsValue","slots","i1","slotsUsedValue","slotsUsedName","showLabels","level","slotsName","position","left","prepared","DnDCharacterSpellsSheet","spellcastingClass","preparedSpellsTotal","spellSaveDC","spellAttackBonus","cantrips","lvl1Spells","lvl1SpellSlotsTotal","lvl1SpellSlotsUsed","lvl2Spells","lvl2SpellSlotsTotal","lvl2SpellSlotsUsed","lvl3Spells","lvl3SpellSlotsTotal","lvl3SpellSlotsUsed","lvl4Spells","lvl4SpellSlotsTotal","lvl4SpellSlotsUsed","lvl5Spells","lvl5SpellSlotsTotal","lvl5SpellSlotsUsed","lvl6Spells","lvl6SpellSlotsTotal","lvl6SpellSlotsUsed","lvl7Spells","lvl7SpellSlotsTotal","lvl7SpellSlotsUsed","lvl8Spells","lvl8SpellSlotsTotal","lvl8SpellSlotsUsed","lvl9Spells","lvl9SpellSlotsTotal","lvl9SpellSlotsUsed"],"mappings":"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"}